{
  "hash": "d5df65abdc5b6f7ef0314587c43e7801",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Swift GeoStack Criteria\ndate: last-modified\ndate-format: long\n---\n\n## What is important when designing a Swift GeoStack?\n\n1.  Interoperability\n2.\n\nGeospatial interoperability is extremely standardized.  This effort is primarily centered around the standards published by the [Open Geospatial Consortium (OGC)](https://ogc.org).  Service interoperability standards insure that one geoserver can be substituted for another.  File format standards insure data can be easily exchanged.  GeoSQL standards insure one data store can be substituted for another. By implementing these standards, all components in a Swift GeoStack will be immediately usable.\n\nThe geospatial community has developed a strong set of standards that are widely adhered to by both commercial GIS vendors and Open Source community.  Due to these standards, it's relatively easy to develop at one tier and know that you'll have interoperability with services available at other tiers.  Additionally, there are a few C/C++ projects that have become central to nearly every geospatial product regardless of it's native language.\n\n\n\n## Data Tier\n### Database\n\n### Filesystem\n\n## Services Tier\n\n## Application Tier\n\n",
    "supporting": [
      "3_criteria_files"
    ],
    "filters": [],
    "includes": {}
  }
}